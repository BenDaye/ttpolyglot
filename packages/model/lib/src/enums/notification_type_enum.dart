import 'package:freezed_annotation/freezed_annotation.dart';

/// ÈÄöÁü•Á±ªÂûãÊûö‰∏æ
enum NotificationTypeEnum {
  projectCreated('project.created', 'È°πÁõÆÂàõÂª∫', 'ÂΩìÂàõÂª∫Êñ∞È°πÁõÆÊó∂ÈÄöÁü•ÊÇ®', 'üìÅ'),
  projectUpdated('project.updated', 'È°πÁõÆÊõ¥Êñ∞', 'ÂΩìÈ°πÁõÆ‰ø°ÊÅØÊõ¥Êñ∞Êó∂ÈÄöÁü•ÊÇ®', '‚úèÔ∏è'),
  projectArchived('project.archived', 'È°πÁõÆÂΩíÊ°£', 'ÂΩìÈ°πÁõÆË¢´ÂΩíÊ°£Êó∂ÈÄöÁü•ÊÇ®', 'üì¶'),
  memberInvited('member.invited', 'ÊàêÂëòÈÇÄËØ∑', 'ÂΩìÊÇ®Ë¢´ÈÇÄËØ∑Âä†ÂÖ•È°πÁõÆÊó∂ÈÄöÁü•ÊÇ®', 'üì®'),
  memberJoined('member.joined', 'ÊàêÂëòÂä†ÂÖ•', 'ÂΩìÊñ∞ÊàêÂëòÂä†ÂÖ•È°πÁõÆÊó∂ÈÄöÁü•ÊÇ®', 'üëã'),
  memberRemoved('member.removed', 'ÊàêÂëòÁßªÈô§', 'ÂΩìÊàêÂëòË¢´ÁßªÈô§Êó∂ÈÄöÁü•ÊÇ®', 'üëã'),
  memberRoleChanged('member.role_changed', 'ÊàêÂëòËßíËâ≤ÂèòÊõ¥', 'ÂΩìÊàêÂëòËßíËâ≤ÂèòÊõ¥Êó∂ÈÄöÁü•ÊÇ®', 'üîÑ'),
  translationCreated('translation.created', 'ÁøªËØëÂàõÂª∫', 'ÂΩìÂàõÂª∫Êñ∞ÁøªËØëÊó∂ÈÄöÁü•ÊÇ®', 'üåê'),
  translationUpdated('translation.updated', 'ÁøªËØëÊõ¥Êñ∞', 'ÂΩìÁøªËØëÂÜÖÂÆπÊõ¥Êñ∞Êó∂ÈÄöÁü•ÊÇ®', 'üåê'),
  translationDeleted('translation.deleted', 'ÁøªËØëÂà†Èô§', 'ÂΩìÁøªËØëË¢´Âà†Èô§Êó∂ÈÄöÁü•ÊÇ®', 'üóëÔ∏è'),
  commentMentioned('comment.mentioned', 'ËØÑËÆ∫ÊèêÂèä', 'ÂΩìÊúâ‰∫∫Âú®ËØÑËÆ∫‰∏≠ÊèêÂèäÊÇ®Êó∂ÈÄöÁü•ÊÇ®', 'üí¨'),
  commentReplied('comment.replied', 'ËØÑËÆ∫ÂõûÂ§ç', 'ÂΩìÊúâ‰∫∫ÂõûÂ§çÊÇ®ÁöÑËØÑËÆ∫Êó∂ÈÄöÁü•ÊÇ®', 'üí¨');

  const NotificationTypeEnum(this.value, this.displayName, this.description, this.icon);

  final String value;
  final String displayName;
  final String description;
  final String icon;

  /// Ê†πÊçÆÂÄºËé∑ÂèñÂØπÂ∫îÁöÑÊûö‰∏æ
  static NotificationTypeEnum fromValue(String value) {
    return NotificationTypeEnum.values.firstWhere(
      (type) => type.value == value,
      orElse: () => NotificationTypeEnum.projectCreated,
    );
  }
}

/// NotificationTypeEnum ÁöÑ JSON ËΩ¨Êç¢Âô®
class NotificationTypeEnumConverter implements JsonConverter<NotificationTypeEnum, String> {
  const NotificationTypeEnumConverter();

  @override
  NotificationTypeEnum fromJson(String json) {
    return NotificationTypeEnum.fromValue(json);
  }

  @override
  String toJson(NotificationTypeEnum object) => object.value;
}
